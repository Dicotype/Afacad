# automatic
@Uppercase = [ A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D DZcaron Eth Dcaron Dcroat Dzcaron E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Eogonek Etilde Schwa Ezh Ezhcaron F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gstroke H Hbar Hcircumflex I IJ Iacute Ibreve Icircumflex Idblgrave Idieresis Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jacute Jcircumflex K Kcaron Kcommaaccent L LJ Lacute Lcaron Lcommaaccent Ldot Lj Lslash M N NJ Nacute Ncaron Ncommaaccent Nj Ntilde Eng O Oacute Obreve Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE P Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rinvertedbreve S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucircumflex Udblgrave Udieresis Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent
];

# automatic
@Lowercase = [ a aacute abreve abreveacute abrevedotbelow abrevegrave abrevehookabove abrevetilde acircumflex acircumflexacute acircumflexdotbelow acircumflexgrave acircumflexhookabove acircumflextilde adblgrave adieresis adotbelow agrave ahookabove ainvertedbreve amacron aogonek aring aringacute atilde ae aeacute b c cacute ccaron ccedilla ccircumflex cdotaccent d eth dcaron dcroat dzcaron e eacute ebreve ecaron ecircumflex ecircumflexacute ecircumflexdotbelow ecircumflexgrave ecircumflexhookabove ecircumflextilde edblgrave edieresis edotaccent edotbelow egrave ehookabove einvertedbreve emacron eogonek etilde schwa ezh ezhcaron f g gbreve gcaron gcircumflex gcommaaccent gdotaccent gstroke h hbar hcircumflex i idotless iacute ibreve icircumflex idblgrave idieresis idotaccent idotbelow igrave ihookabove iinvertedbreve ij imacron iogonek itilde j jdotless jacute jcircumflex k kcaron kcommaaccent kgreenlandic l lacute lcaron lcommaaccent ldot lj lslash m n nacute ncaron ncommaaccent nj ntilde eng o oacute obreve ocircumflex ocircumflexacute ocircumflexdotbelow ocircumflexgrave ocircumflexhookabove ocircumflextilde odblgrave odieresis odieresismacron odotaccentmacron odotbelow ograve ohookabove ohorn ohornacute ohorndotbelow ohorngrave ohornhookabove ohorntilde ohungarumlaut oinvertedbreve omacron oogonek oslash oslashacute otilde otildemacron oe p thorn q r racute rcaron rcommaaccent rdblgrave rinvertedbreve s sacute scaron scedilla scircumflex scommaaccent germandbls t tbar tcaron tcedilla tcommaaccent u uacute ubreve ucircumflex udblgrave udieresis udotbelow ugrave uhookabove uhorn uhornacute uhorndotbelow uhorngrave uhornhookabove uhorntilde uhungarumlaut uinvertedbreve umacron uogonek uring utilde v w wacute wcircumflex wdieresis wgrave x y yacute ycircumflex ydieresis ydotbelow ygrave yhookabove ymacron ytilde z zacute zcaron zdotaccent d.croat h.hbar o.slash a.ss02 aacute.ss02 abreve.ss02 abreveacute.ss02 abrevedotbelow.ss02 abrevegrave.ss02 abrevehookabove.ss02 abrevetilde.ss02 acircumflex.ss02 acircumflexacute.ss02 acircumflexdotbelow.ss02 acircumflexgrave.ss02 acircumflexhookabove.ss02 acircumflextilde.ss02 adblgrave.ss02 adieresis.ss02 adotbelow.ss02 agrave.ss02 ahookabove.ss02 ainvertedbreve.ss02 amacron.ss02 aogonek.ss02 aring.ss02 aringacute.ss02 atilde.ss02 l.ss03 lacute.ss03 lcaron.ss03 lcommaaccent.ss03 ldot.ss03 lslash.ss03 f_f f_f_i f_f_l fi fl t_t pi
];

@Numerals = [ zero
one
two
three
four
five
six
seven
eight
nine
dek
el
zero.lf
zero.lf.ss01
one.lf
two.lf
three.lf
four.lf
five.lf
six.lf
seven.lf
eight.lf
nine.lf
dek.lf
el.lf

];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
languagesystem latn NLD;


feature aalt {
# automatic
feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature pnum;
feature tnum;
feature case;
feature zero;
feature calt;
feature ss01;
feature ss02;
feature ss03;
feature ss04;

} aalt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokelongcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [acutecomb dieresiscomb dotaccentcomb dotbelowcomb gravecomb hookabovecomb ringcomb_acutecomb ringcomb strokeshortcomb tildecomb];
	@MarkscombCase = [acutecomb.case dieresiscomb.case dotaccentcomb.case dotbelowcomb.case gravecomb.case hookabovecomb.case ringcomb_acutecomb.case ringcomb.case strokeshortcomb.case tildecomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_Other_3 {
	lookupflag 0;
	sub dieresiscomb macroncomb by dieresiscomb_macroncomb;
	sub dotaccentcomb macroncomb by dotaccentcomb_macroncomb;
	sub ringcomb acutecomb by ringcomb_acutecomb;
	sub tildecomb macroncomb by tildecomb_macroncomb;
} ccmp_Other_3;

lookup ccmp_latn_1 {
	sub fi by f i;
	sub fl by f l;
	sub Ldot by L periodcentered.loclCAT.case;
	sub lj by l j;
	sub Lj by L j;
	sub LJ by L J;
	sub nj by n j;
	sub Nj by N j;
	sub NJ by N J;
	sub dzcaron by d zcaron;
	sub Dzcaron by D zcaron;
	sub DZcaron by D Zcaron;
} ccmp_latn_1;

lookup ccmp_latn_2 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
} ccmp_latn_2;

script latn;
lookup ccmp_latn_1;
lookup ccmp_latn_2;

} ccmp;

feature locl {
# automatic
lookup locl_latn_0 {
	script latn;
	language AZE;
	sub i by idotaccent;
	language CRT;
	sub i by idotaccent;
	language KAZ;
	sub i by idotaccent;
	language TAT;
	sub i by idotaccent;
	language TRK;
	sub i by idotaccent;
} locl_latn_0;

lookup locl_latn_1 {
	script latn;
	language ROM;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
	language MOL;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;

lookup locl_latn_2 {
	script latn;
	language CAT;
	sub l periodcentered' l by periodcentered.loclCAT;
	sub L periodcentered' L by periodcentered.loclCAT.case;
} locl_latn_2;

lookup locl_latn_3 {
	script latn;
	language NLD;
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_3;

} locl;

feature subs {
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub dek by dekinferior;
sub el by elinferior;
sub parenleft by parenleft.inferior;
sub parenright by parenright.inferior;
sub plus by plus.inferior;
sub equal by equal.inferior;
sub [hyphen endash hyphen.case endash.case hyphentwo.case minus minus.dnom minus.numr minus.superior] by minus.inferior;

} subs;

feature sinf {
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub dek by dekinferior;
sub el by elinferior;
sub parenleft by parenleft.inferior;
sub parenright by parenright.inferior;
sub plus by plus.inferior;
sub equal by equal.inferior;
sub [hyphen endash hyphen.case endash.case hyphentwo.case minus minus.dnom minus.numr minus.superior] by minus.inferior;

} sinf;

feature sups {
sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
sub dek by deksuperior;
sub el by elsuperior;
sub parenleft by parenleft.superior;
sub parenright by parenright.superior;
sub plus by plus.superior;
sub equal by equal.superior;
sub [hyphen endash hyphen.case endash.case hyphentwo.case minus minus.dnom minus.numr minus.inferior] by minus.superior;

} sups;

feature numr {
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
sub dek by dek.numr;
sub el by el.numr;
sub parenleft by parenleft.numr;
sub parenright by parenright.numr;
sub plus by plus.numr;
sub equal by equal.numr;
sub [hyphen endash hyphen.case endash.case hyphentwo.case minus minus.dnom minus.inferior minus.superior] by minus.numr;

} numr;

feature dnom {
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
sub dek by dek.dnom;
sub el by el.dnom;
sub parenleft by parenleft.dnom;
sub parenright by parenright.dnom;
sub plus by plus.dnom;
sub equal by equal.dnom;
sub [hyphen endash hyphen.case endash.case hyphentwo.case minus minus.numr minus.inferior minus.superior] by minus.dnom;

} dnom;

feature frac {
lookup FRAC {
	sub slash by fraction;
	sub [hyphen endash hyphen.case endash.case hyphentwo.case minus minus.dnom  minus.inferior minus.superior] by minus.numr;
	sub [plus] by plus.numr;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine dek el parenleft parenright plus minus equal] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr dek.numr el.numr parenleft.numr parenright.numr plus.numr minus.numr equal.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr dek.numr el.numr parenleft.numr parenright.numr plus.numr minus.numr equal.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom dek.dnom el.dnom parenleft.dnom parenright.dnom plus.dnom minus.dnom equal.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom dek.dnom el.dnom parenleft.dnom parenright.dnom plus.dnom minus.dnom equal.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr dek.numr el.numr parenright.numr plus.numr minus.numr equal.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom dek.dnom el.dnom parenright.dnom plus.dnom minus.dnom equal.dnom];
} DOWN;
lookup DOWN_2 {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr dek.numr el.numr parenleft.numr parenright.numr plus.numr minus.numr equal.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom dek.dnom el.dnom parenleft.dnom parenright.dnom plus.dnom minus.dnom equal.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom dek.dnom el.dnom parenleft.dnom parenright.dnom plus.dnom minus.dnom equal.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr dek.numr el.numr parenright.numr plus.numr minus.numr equal.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom dek.dnom el.dnom parenright.dnom plus.dnom minus.dnom equal.dnom];
} DOWN_2;

} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;

} ordn;

feature pnum {
sub zero.tf by zero.lf;
sub one.tf by one.lf;
sub two.tf by two.lf;
sub three.tf by three.lf;
sub four.tf by four.lf;
sub five.tf by five.lf;
sub six.tf by six.lf;
sub seven.tf by seven.lf;
sub eight.tf by eight.lf;
sub nine.tf by nine.lf;
sub dek.tf by dek.lf;
sub el.tf by el.lf;
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
sub dek by dek.lf;
sub el by el.lf;


} pnum;

feature tnum {
# automatic
sub zero.lf by zero;
sub one.lf by one;
sub two.lf by two;
sub three.lf by three;
sub four.lf by four;
sub five.lf by five;
sub six.lf by six;
sub seven.lf by seven;
sub eight.lf by eight;
sub nine.lf by nine;
sub dek.lf by dek;
sub el.lf by el;
sub registered.lf by registered;
sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
sub dek by dek.tf;
sub el by el.tf;

} tnum;

feature case {
# automatic
sub colon by colon.case;
sub semicolon by semicolon.case;
sub periodcentered.loclCAT by periodcentered.loclCAT.case;
sub hyphen by hyphen.case;
sub softhyphen by softhyphen.case;
sub endash by endash.case;
sub threequarteremdash by threequarteremdash.case;
sub emdash by emdash.case;
sub hyphentwo by hyphentwo.case;
sub guillemetleft by guillemetleft.case;
sub guillemetright by guillemetright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub acutecomb by acutecomb.case;
sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub dotbelowcomb by dotbelowcomb.case;
sub gravecomb by gravecomb.case;
sub hookabovecomb by hookabovecomb.case;
sub ringcomb_acutecomb by ringcomb_acutecomb.case;
sub ringcomb by ringcomb.case;
sub strokeshortcomb by strokeshortcomb.case;
sub tildecomb by tildecomb.case;

} case;

feature dlig {
lookupflag IgnoreMarks;
sub f f b by f_f_b;
sub f f h by f_f_h;
sub f f j by f_f_j;
sub f f k by f_f_k;
sub f b by f_b;
sub f h by f_h;
sub f j by f_j;
sub f k by f_k;
sub f t by f_t;
sub t t by t_t;
} dlig;

feature liga {
lookupflag IgnoreMarks;
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f l.ss03 by f_f_l.ss03;
sub f f by f_f;
sub f i by fi;
sub f l by fl;
sub f l.ss03 by fl.ss03;
} liga;

feature zero {
sub zero by zero.zero;
sub zero.tf by zero.tf.zero;
sub zero.lf by zero.lf.zero;
sub zero.lf.ss01 by zero.lf.zero.ss01; 


} zero;

feature calt {
sub @Uppercase [colon semicolon hyphen softhyphen endash emdash hyphentwo guillemetleft guillemetright guilsinglleft guilsinglright]' @Uppercase by [colon.case semicolon.case hyphen.case softhyphen.case endash.case emdash.case hyphentwo.case guillemetleft.case guillemetright.case guilsinglleft.case guilsinglright.case];
sub @Numerals [colon semicolon hyphen softhyphen endash emdash hyphentwo guillemetleft guillemetright guilsinglleft guilsinglright]' @Numerals by [colon.case semicolon.case hyphen.case softhyphen.case endash.case emdash.case hyphentwo.case guillemetleft.case guillemetright.case guilsinglleft.case guilsinglright.case];
sub period slash period by commercialMinusSign;
} calt;

feature kern {
pos [L Lacute Lcommaaccent Lslash] [quoteleft quoteright quotesingle]' 60 [A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute];
pos [L Lacute Lcommaaccent Lslash]' 60 [quoteleft quoteright quotesingle] [A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute];
pos [F P Thorn T Tbar Tcaron Tcedilla Tcommaaccent Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde] [period comma]' 60 [C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent Schwa G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gstroke O Oacute Obreve Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE Q];
pos [F P Thorn T Tbar Tcaron Tcedilla Tcommaaccent Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde]' 60 [period comma] [C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent Schwa G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gstroke O Oacute Obreve Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE Q];

} kern;

feature ss01 {
featureNames {
  name "Alternate proportional zero";
};
# automatic
sub zero.lf by zero.lf.ss01;
sub zero.lf.zero by zero.lf.zero.ss01;

} ss01;

feature ss02 {
featureNames {
  name "Alternate lowercase a";
};
sub a by a.ss02;
sub aacute by aacute.ss02;
sub abreve by abreve.ss02;
sub abreveacute by abreveacute.ss02;
sub abrevedotbelow by abrevedotbelow.ss02;
sub abrevegrave by abrevegrave.ss02;
sub abrevehookabove by abrevehookabove.ss02;
sub abrevetilde by abrevetilde.ss02;
sub acircumflex by acircumflex.ss02;
sub acircumflexacute by acircumflexacute.ss02;
sub acircumflexdotbelow by acircumflexdotbelow.ss02;
sub acircumflexgrave by acircumflexgrave.ss02;
sub acircumflexhookabove by acircumflexhookabove.ss02;
sub acircumflextilde by acircumflextilde.ss02;
sub adblgrave by adblgrave.ss02;
sub adieresis by adieresis.ss02;
sub adotbelow by adotbelow.ss02;
sub agrave by agrave.ss02;
sub ahookabove by ahookabove.ss02;
sub ainvertedbreve by ainvertedbreve.ss02;
sub amacron by amacron.ss02;
sub aogonek by aogonek.ss02;
sub aring by aring.ss02;
sub aringacute by aringacute.ss02;
sub atilde by atilde.ss02;
sub ordfeminine by ordfeminine.ss02;
sub at by at.ss02;

} ss02;

feature ss03 {
featureNames {
  name "Alternate lowercase  l";
};
# automatic
sub l by l.ss03;
sub lacute by lacute.ss03;
sub lcaron by lcaron.ss03;
sub lcommaaccent by lcommaaccent.ss03;
sub ldot by ldot.ss03;
sub lslash by lslash.ss03;
sub f_f_l by f_f_l.ss03;
sub fl by fl.ss03;

} ss03;

feature ss04 {
featureNames {
  name "Alternate 3/4 emdash";
};
sub emdash by threequarteremdash;
sub emdash.case by threequarteremdash.case;
} ss04;
